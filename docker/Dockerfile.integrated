# Integrated Service (Rate Limiter + Rule Engine)
FROM golang:1.22.5-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod files
COPY rate-limiter/go.mod ./rate-limiter/
COPY rule-engine/go.mod ./rule-engine/
COPY go.mod ./

# Download dependencies
RUN go mod download
RUN cd rate-limiter && go mod download
RUN cd rule-engine && go mod download

# Copy source code
COPY rate-limiter/ ./rate-limiter/
COPY rule-engine/ ./rule-engine/

# Build the application
RUN cd rate-limiter && CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /app/bin/integrated-server ./cmd/integrated-server/

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates wget
WORKDIR /root/

COPY --from=builder /app/bin/integrated-server .

# Add health check endpoint
COPY docker/health-check.sh ./health-check.sh
RUN chmod +x ./health-check.sh

EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD ./health-check.sh

CMD ["./integrated-server"]
